{
  "abi": [],
  "bytecode": {
    "object": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820dabe62157800f4174e2b576cd42908b22a9e9dd6e7c20da11bc7249fc8332ffa64736f6c63430005110032",
    "sourceMap": "526:1016:18:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820dabe62157800f4174e2b576cd42908b22a9e9dd6e7c20da11bc7249fc8332ffa64736f6c63430005110032",
    "sourceMap": "526:1016:18:-;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\"}},\"settings\":{\"compilationTarget\":{\"/home/lipu/crossChain2.1_with_foundry/eth-contracts/contracts/core/cross_chain_manager/libs/utils/Address.sol\":\"OpenZeppelinUpgradesAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"/home/lipu/crossChain2.1_with_foundry/eth-contracts/contracts/core/cross_chain_manager/libs/utils/Address.sol\":{\"keccak256\":\"0x7be7f8e4c08bc70ff9815e3f11c569f42aa3c447b5bc61fd75fb5cec97f63a9f\",\"urls\":[\"bzz-raw://f301a9226d637e1593916ba2de7b0b28c35f2adc3ca8526289fe1eedafa83bc2\",\"dweb:/ipfs/QmPb991LE8nyvhB4BkX46P1Pan2ijH9tfqWwLAz65VUUKs\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.5.17+commit.d19bba13"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "methods": {}
      },
      "userdoc": {
        "methods": {}
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "compilationTarget": {
        "/home/lipu/crossChain2.1_with_foundry/eth-contracts/contracts/core/cross_chain_manager/libs/utils/Address.sol": "OpenZeppelinUpgradesAddress"
      },
      "libraries": {}
    },
    "sources": {
      "/home/lipu/crossChain2.1_with_foundry/eth-contracts/contracts/core/cross_chain_manager/libs/utils/Address.sol": {
        "keccak256": "0x7be7f8e4c08bc70ff9815e3f11c569f42aa3c447b5bc61fd75fb5cec97f63a9f",
        "urls": [
          "bzz-raw://f301a9226d637e1593916ba2de7b0b28c35f2adc3ca8526289fe1eedafa83bc2",
          "dweb:/ipfs/QmPb991LE8nyvhB4BkX46P1Pan2ijH9tfqWwLAz65VUUKs"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "/home/lipu/crossChain2.1_with_foundry/eth-contracts/contracts/core/cross_chain_manager/libs/utils/Address.sol",
    "id": 3618,
    "exportedSymbols": {
      "OpenZeppelinUpgradesAddress": [
        3617
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1543:18",
    "nodes": [
      {
        "id": 3600,
        "nodeType": "PragmaDirective",
        "src": "0:23:18",
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ]
      },
      {
        "id": 3617,
        "nodeType": "ContractDefinition",
        "src": "526:1016:18",
        "nodes": [
          {
            "id": 3616,
            "nodeType": "FunctionDefinition",
            "src": "924:616:18",
            "body": {
              "id": 3615,
              "nodeType": "Block",
              "src": "990:550:18",
              "statements": [
                {
                  "assignments": [
                    3608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3608,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 3615,
                      "src": "1000:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3607,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1000:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3609,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1000:12:18"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 3608,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1479:4:18",
                        "valueSize": 1
                      }
                    },
                    {
                      "account": {
                        "declaration": 3602,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1499:7:18",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3610,
                  "nodeType": "InlineAssembly",
                  "operations": "{ size := extcodesize(account) }",
                  "src": "1468:41:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3611,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3608,
                      "src": "1525:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1532:1:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1525:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3606,
                  "id": 3614,
                  "nodeType": "Return",
                  "src": "1518:15:18"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "parameters": {
              "id": 3603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3602,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3616,
                  "src": "944:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "943:17:18"
            },
            "returnParameters": {
              "id": 3606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3605,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3616,
                  "src": "984:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "983:6:18"
            },
            "scope": 3617,
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\nThis contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\nwhen the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\nbuild/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3617
        ],
        "name": "OpenZeppelinUpgradesAddress",
        "scope": 3618
      }
    ]
  },
  "id": 18
}